[{"D:\\reactjs\\shopit\\frontend\\src\\index.js":"1","D:\\reactjs\\shopit\\frontend\\src\\App.js":"2","D:\\reactjs\\shopit\\frontend\\src\\components\\Header.js":"3","D:\\reactjs\\shopit\\frontend\\src\\components\\Footer.js":"4","D:\\reactjs\\shopit\\frontend\\src\\screens\\HomeScreen.js":"5","D:\\reactjs\\shopit\\frontend\\src\\products.js":"6","D:\\reactjs\\shopit\\frontend\\src\\components\\Product.js":"7","D:\\reactjs\\shopit\\frontend\\src\\components\\Rating.js":"8","D:\\reactjs\\shopit\\frontend\\src\\screens\\ProductScreen.js":"9","D:\\reactjs\\shopit\\frontend\\src\\store.js":"10","D:\\reactjs\\shopit\\frontend\\src\\reducers\\productReducers.js":"11","D:\\reactjs\\shopit\\frontend\\src\\actions\\productActions.js":"12","D:\\reactjs\\shopit\\frontend\\src\\constants\\productConstants.js":"13","D:\\reactjs\\shopit\\frontend\\src\\components\\Message.js":"14","D:\\reactjs\\shopit\\frontend\\src\\components\\Loader.js":"15","D:\\reactjs\\shopit\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\reactjs\\shopit\\frontend\\src\\constants\\cartConstants.js":"17","D:\\reactjs\\shopit\\frontend\\src\\screens\\CartScreen.js":"18","D:\\reactjs\\shopit\\frontend\\src\\actions\\cartActions.js":"19","D:\\reactjs\\shopit\\frontend\\src\\reducers\\userReducers.js":"20","D:\\reactjs\\shopit\\frontend\\src\\constants\\userConstants.js":"21","D:\\reactjs\\shopit\\frontend\\src\\screens\\LoginScreen.js":"22","D:\\reactjs\\shopit\\frontend\\src\\actions\\userActions.js":"23","D:\\reactjs\\shopit\\frontend\\src\\components\\FormContainer.js":"24","D:\\reactjs\\shopit\\frontend\\src\\components\\SearchBox.js":"25","D:\\reactjs\\shopit\\frontend\\src\\screens\\RegisterScreen.js":"26","D:\\reactjs\\shopit\\frontend\\src\\screens\\ProfileScreen.js":"27","D:\\reactjs\\shopit\\frontend\\src\\screens\\ShippingScreen.js":"28","D:\\reactjs\\shopit\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\reactjs\\shopit\\frontend\\src\\screens\\PaymentScreen.js":"30","D:\\reactjs\\shopit\\frontend\\src\\reducers\\orderReducers.js":"31","D:\\reactjs\\shopit\\frontend\\src\\constants\\orderConstants.js":"32","D:\\reactjs\\shopit\\frontend\\src\\screens\\PlaceOrderScreen.js":"33","D:\\reactjs\\shopit\\frontend\\src\\actions\\orderActions.js":"34","D:\\reactjs\\shopit\\frontend\\src\\screens\\OrderScreen.js":"35","D:\\reactjs\\shopit\\frontend\\src\\screens\\UserListScreen.js":"36","D:\\reactjs\\shopit\\frontend\\src\\screens\\UserEditScreen.js":"37","D:\\reactjs\\shopit\\frontend\\src\\screens\\ProductListScreen.js":"38","D:\\reactjs\\shopit\\frontend\\src\\screens\\EditProductScreen.js":"39","D:\\reactjs\\shopit\\frontend\\src\\screens\\OrderListScreen.js":"40","D:\\reactjs\\shopit\\frontend\\src\\components\\Paginate.js":"41","D:\\reactjs\\shopit\\frontend\\src\\components\\ProductCarousel.js":"42","D:\\reactjs\\shopit\\frontend\\src\\components\\Meta.js":"43","D:\\reactjs\\shopit\\frontend\\src\\reducers\\categoryReducers.js":"44","D:\\reactjs\\shopit\\frontend\\src\\actions\\categoryActions.js":"45","D:\\reactjs\\shopit\\frontend\\src\\constants\\categoryConstants.js":"46","D:\\reactjs\\shopit\\frontend\\src\\components\\OptionCategory.js":"47"},{"size":365,"mtime":1609429175099,"results":"48","hashOfConfig":"49"},{"size":2746,"mtime":1611226986420,"results":"50","hashOfConfig":"49"},{"size":3960,"mtime":1611201771305,"results":"51","hashOfConfig":"49"},{"size":144,"mtime":1608539510725,"results":"52","hashOfConfig":"49"},{"size":2108,"mtime":1611580947247,"results":"53","hashOfConfig":"49"},{"size":2601,"mtime":1608691255248,"results":"54","hashOfConfig":"49"},{"size":780,"mtime":1611223635864,"results":"55","hashOfConfig":"49"},{"size":1638,"mtime":1608637466969,"results":"56","hashOfConfig":"49"},{"size":8712,"mtime":1612775718524,"results":"57","hashOfConfig":"49"},{"size":2659,"mtime":1613188013925,"results":"58","hashOfConfig":"49"},{"size":3785,"mtime":1611216225925,"results":"59","hashOfConfig":"49"},{"size":5153,"mtime":1611207866923,"results":"60","hashOfConfig":"49"},{"size":1550,"mtime":1611207514980,"results":"61","hashOfConfig":"49"},{"size":256,"mtime":1609071464760,"results":"62","hashOfConfig":"49"},{"size":410,"mtime":1609071497599,"results":"63","hashOfConfig":"49"},{"size":1301,"mtime":1609840318914,"results":"64","hashOfConfig":"49"},{"size":289,"mtime":1609165174357,"results":"65","hashOfConfig":"49"},{"size":3667,"mtime":1609231986329,"results":"66","hashOfConfig":"49"},{"size":1418,"mtime":1609811935734,"results":"67","hashOfConfig":"49"},{"size":3664,"mtime":1610367869225,"results":"68","hashOfConfig":"49"},{"size":1589,"mtime":1610367585810,"results":"69","hashOfConfig":"49"},{"size":2258,"mtime":1609423377892,"results":"70","hashOfConfig":"49"},{"size":6449,"mtime":1611292128309,"results":"71","hashOfConfig":"49"},{"size":333,"mtime":1611241130025,"results":"72","hashOfConfig":"49"},{"size":734,"mtime":1611024545078,"results":"73","hashOfConfig":"49"},{"size":3269,"mtime":1609436040881,"results":"74","hashOfConfig":"49"},{"size":5796,"mtime":1611292341313,"results":"75","hashOfConfig":"49"},{"size":2610,"mtime":1609734514939,"results":"76","hashOfConfig":"49"},{"size":1300,"mtime":1609565596127,"results":"77","hashOfConfig":"49"},{"size":1834,"mtime":1609811439331,"results":"78","hashOfConfig":"49"},{"size":3679,"mtime":1609822047675,"results":"79","hashOfConfig":"49"},{"size":1345,"mtime":1609822142052,"results":"80","hashOfConfig":"49"},{"size":5569,"mtime":1609923915134,"results":"81","hashOfConfig":"49"},{"size":4942,"mtime":1610938788782,"results":"82","hashOfConfig":"49"},{"size":7431,"mtime":1611315265536,"results":"83","hashOfConfig":"49"},{"size":2876,"mtime":1610368037400,"results":"84","hashOfConfig":"49"},{"size":3257,"mtime":1610367313962,"results":"85","hashOfConfig":"49"},{"size":5322,"mtime":1613190338797,"results":"86","hashOfConfig":"49"},{"size":6889,"mtime":1612882097311,"results":"87","hashOfConfig":"49"},{"size":2703,"mtime":1610936290213,"results":"88","hashOfConfig":"49"},{"size":783,"mtime":1611028846806,"results":"89","hashOfConfig":"49"},{"size":2189,"mtime":1611223419511,"results":"90","hashOfConfig":"49"},{"size":509,"mtime":1611541611891,"results":"91","hashOfConfig":"49"},{"size":1686,"mtime":1613187949991,"results":"92","hashOfConfig":"49"},{"size":2304,"mtime":1613189862500,"results":"93","hashOfConfig":"49"},{"size":673,"mtime":1613186244304,"results":"94","hashOfConfig":"49"},{"size":556,"mtime":1612882385498,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"148pj0",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"98"},"D:\\reactjs\\shopit\\frontend\\src\\index.js",[],["197","198"],"D:\\reactjs\\shopit\\frontend\\src\\App.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\Header.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\Footer.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\products.js",[],["199","200"],"D:\\reactjs\\shopit\\frontend\\src\\components\\Product.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\Rating.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\store.js",[],"D:\\reactjs\\shopit\\frontend\\src\\reducers\\productReducers.js",[],"D:\\reactjs\\shopit\\frontend\\src\\actions\\productActions.js",[],"D:\\reactjs\\shopit\\frontend\\src\\constants\\productConstants.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\Message.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\Loader.js",[],"D:\\reactjs\\shopit\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\reactjs\\shopit\\frontend\\src\\constants\\cartConstants.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\CartScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\actions\\cartActions.js",[],"D:\\reactjs\\shopit\\frontend\\src\\reducers\\userReducers.js",[],"D:\\reactjs\\shopit\\frontend\\src\\constants\\userConstants.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\actions\\userActions.js",["201","202"],"import axios from 'axios';\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_DELETE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // Set the data to LocalStorage\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\reactjs\\shopit\\frontend\\src\\components\\FormContainer.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\SearchBox.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\reactjs\\shopit\\frontend\\src\\constants\\orderConstants.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\actions\\orderActions.js",["203"],"import axios from 'axios';\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DETAILS_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\reactjs\\shopit\\frontend\\src\\screens\\OrderScreen.js",["204","205","206","207"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  deliverOrder,\r\n  getOrderDetails,\r\n  payOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET,\r\n} from '../constants/orderConstants';\r\nimport { updateProduct } from '../actions/productActions';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [countInStock, setCountInStock] = useState(0);\r\n\r\n  if (!loading) {\r\n    // Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  // const remainingStocks = () => {\r\n  //   {order.orderItems.map((item, index) => (\r\n  //     item.qty -\r\n  //   ))}\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      // dispatch({ type: CART_CLEAR_ITEMS });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup.Item>\r\n            <h2>Shipping</h2>\r\n            <p>\r\n              <strong>Name: </strong> {order.user.name}\r\n            </p>\r\n            <p>\r\n              <strong>Email:</strong> {order.user.email}\r\n            </p>\r\n            <p>\r\n              <strong>Address:</strong> {order.shippingAddress.address}{' '}\r\n              {order.shippingAddress.city}, {order.shippingAddress.country}\r\n            </p>\r\n            {order.isDelivered ? (\r\n              <Message variant='success'>Delivered on {order.paidAt}</Message>\r\n            ) : (\r\n              <Message variant='danger'>Order is not delivered</Message>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <h2>Payment Method</h2>\r\n            <p>\r\n              <strong>Method: </strong>\r\n              {order.paymentMethod}\r\n            </p>\r\n            {order.isPaid ? (\r\n              <Message variant='success'>Paid on {order.paidAt}</Message>\r\n            ) : (\r\n              <Message variant='danger'>Not Paid</Message>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <h2>Order Items</h2>\r\n            {order.orderItems.length === 0 ? (\r\n              <p>No order items</p>\r\n            ) : (\r\n              <ListGroup variant='flush'>\r\n                {order.orderItems.map((item, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    <Row>\r\n                      <Col md={2}>\r\n                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                      </Col>\r\n                      <Col>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={4}>\r\n                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )}\r\n          </ListGroup.Item>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      tyoe='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","D:\\reactjs\\shopit\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\ProductListScreen.js",["208","209"],"D:\\reactjs\\shopit\\frontend\\src\\screens\\EditProductScreen.js",[],"D:\\reactjs\\shopit\\frontend\\src\\screens\\OrderListScreen.js",["210"],"import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","D:\\reactjs\\shopit\\frontend\\src\\components\\Paginate.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\Meta.js",[],"D:\\reactjs\\shopit\\frontend\\src\\reducers\\categoryReducers.js",[],"D:\\reactjs\\shopit\\frontend\\src\\actions\\categoryActions.js",[],"D:\\reactjs\\shopit\\frontend\\src\\constants\\categoryConstants.js",[],"D:\\reactjs\\shopit\\frontend\\src\\components\\OptionCategory.js",["211","212","213","214","215"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst OptionCategory = () => {\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const {\r\n    loading: loadingCategories,\r\n    error: errorCategories,\r\n    categories,\r\n  } = categoryList;\r\n  return (\r\n    <>\r\n      {categories.map((category) => (\r\n        <option value={`${category.name}`} key={category._id}>\r\n          {category.name}\r\n        </option>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptionCategory;\r\n",{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"216","replacedBy":"220"},{"ruleId":"218","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":17,"column":3,"nodeType":"224","messageId":"225","endLine":17,"endColumn":28},{"ruleId":"222","severity":1,"message":"226","line":25,"column":3,"nodeType":"224","messageId":"225","endLine":25,"endColumn":20},{"ruleId":"222","severity":1,"message":"227","line":21,"column":3,"nodeType":"224","messageId":"225","endLine":21,"endColumn":22},{"ruleId":"222","severity":1,"message":"228","line":18,"column":10,"nodeType":"224","messageId":"225","endLine":18,"endColumn":23},{"ruleId":"222","severity":1,"message":"229","line":19,"column":10,"nodeType":"224","messageId":"225","endLine":19,"endColumn":26},{"ruleId":"222","severity":1,"message":"230","line":40,"column":10,"nodeType":"224","messageId":"225","endLine":40,"endColumn":22},{"ruleId":"222","severity":1,"message":"231","line":40,"column":24,"nodeType":"224","messageId":"225","endLine":40,"endColumn":39},{"ruleId":"222","severity":1,"message":"232","line":42,"column":14,"nodeType":"224","messageId":"225","endLine":42,"endColumn":35},{"ruleId":"222","severity":1,"message":"233","line":43,"column":12,"nodeType":"224","messageId":"225","endLine":43,"endColumn":31},{"ruleId":"222","severity":1,"message":"234","line":19,"column":20,"nodeType":"224","messageId":"225","endLine":19,"endColumn":33},{"ruleId":"222","severity":1,"message":"235","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"236","line":1,"column":27,"nodeType":"224","messageId":"225","endLine":1,"endColumn":36},{"ruleId":"222","severity":1,"message":"237","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":21},{"ruleId":"222","severity":1,"message":"238","line":7,"column":14,"nodeType":"224","messageId":"225","endLine":7,"endColumn":31},{"ruleId":"222","severity":1,"message":"239","line":8,"column":12,"nodeType":"224","messageId":"225","endLine":8,"endColumn":27},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"no-unused-vars","'USER_UPDATE_PROFILE_RESET' is defined but never used.","Identifier","unusedVar","'USER_DELETE_RESET' is defined but never used.","'ORDER_DETAILS_RESET' is defined but never used.","'updateProduct' is defined but never used.","'CART_CLEAR_ITEMS' is defined but never used.","'countInStock' is assigned a value but never used.","'setCountInStock' is assigned a value but never used.","'loadingCategoryCreate' is assigned a value but never used.","'errorCategoryCreate' is assigned a value but never used.","'successDelete' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'loadingCategories' is assigned a value but never used.","'errorCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]